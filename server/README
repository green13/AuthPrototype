authData = userId; accessToken; refreshToken; expiresIn
hash() - sha512
encrypt() - шифрование 'aes-256-ctr' по clientSecret


===============================================
== РЕГИСТРАЦИЯ

/register-client - регистрировать
	-> инфа по девайсу
	<-clientId, clientSecret


[BasicStrategy]
[decryptBody]
/register
	-> {data: encrypt(hash(пароль)/логин + userData (language и что угодно еще))}
	<- authData


взять из фаркла:
/verify
/restore

===============================================
== ВХОД
/register-client

[BasicStrategy]
[decryptBody]
/login
	-> {data: encrypt(hash(пароль)/логин)}
		// удаляем для этого клиента старые токены
	<- authData

[BasicStrategy]
/refresh
	-> refreshToken
		// удаляем старые токены
	<- authData



===============================================
== ВХОД 2FA
/register-client

// подразумевается /login или /register

[BearerStrategy]
/setup-two-factor - установить двухфакторную авторизацию

// подразумевается /logout

[BasicStrategy]
[decryptBody]
/login
	-> {data: encrypt(hash(пароль)/логин)}
		// удаляем для этого клиента старые временные токены
	<- temporaryToken (10 мин)


[TemporaryBearerStrategy] - проверяем временный токен и вбрасываем юзера в TotpStrategy
[TotpStrategy]
/login-otp
	-> 
		// удаляем temporaryToken
	<- authData

/refresh



===============================================
== ВХОД/РЕГИСТРАЦИЯ через соц сети


===============================================
== ВЫХОД
[BearerStrategy]
/logout

===============================================
схемы валидации
	BearerStrategy - http headers Authorization = 'Bearer ' + accessToken
	TemporaryBearerStrategy - http headers Authorization = 'Bearer ' + temporaryToken
	BasicStrategy - http headers Authorization = 'Basic ' +  Base64(clientId:clientSecret)

	TotpStrategy - two-factor authentication; post({code: "111111"})
	Social strategies - FB VK Twitter

===============================================
!!!
	scope/rules - http://stackoverflow.com/questions/15719116/verify-access-group-in-passport-js дополнительный middleware
	баны/блокирование -
		1) accessToken + refreshToken по девайсу
		2) accessToken + refreshToken + device, проверяется при register-client
		3) полностью
	стримы/websockets - проверка на accessToken + clientId/clientSecret