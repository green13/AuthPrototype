auth_data = access_token; refresh_token; expires_in

===============================================
== РЕГИСТРАЦИЯ

/register_client - регистрировать
	-> инфа по девайсу
	<-clientId/secret


[BasicStrategy]
/register
	-> hash(пароль)/логин + user_data (language и что угодно еще)
	<- auth_data + user_id


взять из фаркла:
/verify
/restore

===============================================
== ВХОД
/register_client

[BasicStrategy]
/login
	-> hash(пароль)/логин
		// удаляем для этого клиента старые токены
	<- auth_data

[BasicStrategy]
/refresh
	-> refresh_token
		// удаляем старые токены
	<- auth_data



===============================================
== ВХОД 2FA
/register_client

// подразумевается /login или /register

[BearerStrategy]
/setup-two-factor - установить двухфакторную авторизацию

// подразумевается /logout

[BasicStrategy]
/login
	-> hash(пароль)/логин
		// удаляем для этого клиента старые временные токены
	<- temporary_token (10 мин)


[TemporaryBearerStrategy] - проверяем временный токен и вбрасываем юзера в TotpStrategy
[TotpStrategy]
/login-otp
	-> 
		// удаляем temporary_token
	<- auth_data

/refresh



===============================================
== ВХОД/РЕГИСТРАЦИЯ через соц сети


===============================================
== ВЫХОД
[BearerStrategy]
/logout

===============================================
схемы валидации
	BearerStrategy - http headers Authorization = 'Bearer ' + access_token
	TemporaryBearerStrategy - http headers Authorization = 'Bearer ' + temporary_token
	BasicStrategy - http headers Authorization = 'Basic ' +  Base64(clientId:secret)

	TotpStrategy - two-factor authentication; post({code: "111111"})
	Social strategies - FB VK Twitter

===============================================
!!!
	scope/rules - http://stackoverflow.com/questions/15719116/verify-access-group-in-passport-js дополнительный middleware
	баны/блокирование -
		1) access_token + refresh_token по девайсу
		2) access_token + refresh_token + device, проверяется при register_client
		3) полностью
	стримы/websockets - проверка на access_token + clientId/secret